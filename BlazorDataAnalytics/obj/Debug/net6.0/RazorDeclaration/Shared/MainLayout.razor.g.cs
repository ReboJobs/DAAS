// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorDataAnalytics.Shared
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using BlazorDataAnalytics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using BlazorDataAnalytics.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.Inputs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.Calendars;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.Spinner;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.Popups;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.RichTextEditor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using BlazorDataAnalytics.Dialogs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Syncfusion.Blazor.SplitButtons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using BlazorDataAnalytics.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Microsoft.Identity.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Microsoft.PowerBI.Api;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Microsoft.PowerBI.Api.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Microsoft.Rest;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using BlazorDataAnalytics.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using BlazorDataAnalytics.Services.UserSecurityService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using BlazorDataAnalytics.Services.UserThemeSettingService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using BlazorDataAnalytics.Services.ReportDashboardService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Authentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using System.IdentityModel.Tokens.Jwt;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
using Microsoft.AspNetCore.WebUtilities;

#line default
#line hidden
#nullable disable
    public partial class MainLayout : LayoutComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 193 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Shared\MainLayout.razor"
       
    [CascadingParameter]
    private string isDevice { get; set; }
    private bool mobile { get; set; }
    private bool isAdmin { get; set; }
    private string currentUrl;
    private bool isQualiticks { get; set; } = false;
    private bool showModalUserSettings{ get; set; } = false;
    private string x;
    UserSettingsDialog UserSettingsDialog;

    bool UISwitcher;
    string Display => UISwitcher == true ? "block" : "none";
    private string userName { get; set; } = string.Empty;
    string height;
    bool isShowFilter = false;
    bool filter = true;
    bool isShowSideBar = false;

    void ShowHideItemClick()
    {
        filter = !filter;
        filterstate.SetFilter(filter);
    }
    void ShowHideSidebarClick()
    {
        isShowSideBar = !isShowSideBar;
        filterstate.SetFilter(isShowSideBar);
    }

    SfSidebar sidebarObj;
    public bool SidebarToggle = false;
    public void Toggle()
    {
        SidebarToggle = !SidebarToggle;
    }

    private ElementReference PowerBIElement;
    private IList<Group>? _group;
    private Reports _report;
    public IList<Report>? _reports = new List<Report>();
    private PowerBIClient _client;
    private Guid _workspaceId, _reportId;
    private PowerBIEmbedConfig _result;
    string buttonColor = string.Empty;
    string logo = string.Empty;
    string backgroundBody = string.Empty;

    private UserThemeSettingModel userTheme { get; set; } = new UserThemeSettingModel() ;

    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();
    private string themeName; 
    private List<ThemeDetails> Themes = new List<ThemeDetails>() { 
        new ThemeDetails(){ ID = "material", Text = "Material" }, 
        new ThemeDetails(){ ID = "bootstrap", Text = "Bootstrap" }, 
        new ThemeDetails(){ ID = "fabric", Text = "Fabric" }, 
        new ThemeDetails(){ ID = "bootstrap4", Text = "Bootstrap 4" }, 
    }; 
    public class ThemeDetails 
    { 
        public string ID { get; set; } 
        public string Text { get; set; } 
    }

    private  string CustomerTenantSid = "";

    public async Task GetCustomerTenantSid()
    {
        string resource = "https://management.azure.com";

        var clientId = _configuration.GetSection("AzureAd:ClientId").Value;
        var secret = _configuration.GetSection("AzureAd:ClientSecret").Value;
        var oauthUrl = _configuration.GetSection("AzureAd:Instance").Value + _configuration.GetSection("workSpaceId").Value + "/oauth2/token";
        var content = new FormUrlEncodedContent(new Dictionary <string, string> {
                                      { "client_id", clientId},
                                      { "client_secret", secret},
                                      { "grant_type", "client_credentials" },
                                      { "resource", resource},
                                      { "scope", "user_impersonation"}
                                    });

        var httpRequestMessage = new HttpRequestMessage(HttpMethod.Post, new Uri(oauthUrl))
                            {
                                Content = content
                            };

        var _httpClient = new HttpClient();
        using (var response = await _httpClient.SendAsync(httpRequestMessage))
        {
            if (response.IsSuccessStatusCode)
            {
                var responseStream = await response.Content.ReadAsStringAsync();

                AnalyticsTokenModel analyticsToken = JsonConvert.DeserializeObject<AnalyticsTokenModel>(responseStream);

                var handler = new JwtSecurityTokenHandler();
                var jsonToken = handler.ReadToken(analyticsToken.access_token);
                var tokenS = jsonToken as JwtSecurityToken;

                if (tokenS.Claims.First(claim => claim.Type == "groups") != null)
                {
                    CustomerTenantSid =  tokenS.Claims.First(claim => claim.Type == "groups").Value;
                } var x =  tokenS.Claims.First(claim => claim.Type == "groups").Value;

            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        isShowFilter = UriHelper.Uri.Contains("report");
        filterstate.IsShowHideFilter = isShowFilter ? false : true;
        filterstate.curUrl += currentUrl;
        currentUrl = UriHelper.ToBaseRelativePath(UriHelper.BaseUri);
        AuthenticationResult authenticationResult = null;
        authenticationResult = await DoAuthentication();

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var tokenCredentials = new TokenCredentials(authenticationResult.AccessToken, "Bearer");
        var userNameGroupRolesModel = await _userSecurityService.GetUserNameGroupRoles(user.Identity.Name);
        //check if user is admin
        isAdmin = userNameGroupRolesModel.IsAdmin;
        isQualiticks = isAdmin && user.Identity.Name.Contains("qualiticks.com");
        if(userNameGroupRolesModel.WorkspaceId == Guid.Empty)
        {
            return;
        }
        await GetCustomerTenantSid();
        var reportInDashboards = await _reportDashboardService.GetReportsInDashboardByTenantId(userNameGroupRolesModel.CustomerTenantId,this.CustomerTenantSid);

        userName = user?.Identity?.Name ?? string.Empty;
        userTheme =  _userThemeSettingService.GetUserThemeSettings(userName) ?? new UserThemeSettingModel();
        buttonColor = $"color:{userTheme.NavigationFontColorHex}";

        _result = new PowerBIEmbedConfig();
        _reports = new List<Report>();
        _client = new PowerBIClient(new Uri("https://api.powerbi.com/"), tokenCredentials);

        var groups = await _client.Groups.GetGroupsAsync();

        _group = groups.Value;
        _workspaceId = userNameGroupRolesModel.WorkspaceId;
        _report = await _client.Reports.GetReportsInGroupAsync(_workspaceId);

        if(userNameGroupRolesModel.IsAdmin)
        {
            _reports = _report.Value;
        }
        else
        {
            if(reportInDashboards != null)
            {
                _reports = _report.Value.Where(r => userNameGroupRolesModel.CustomerUserRoles.Any(a => a.Code == 
                                                        reportInDashboards?.FirstOrDefault(x => x.ReportPowerBiId == r.Id)?.UserRoleCode)).ToList();           
            }

        }

        if(string.IsNullOrEmpty(userTheme.HeaderImageLogoUrl))
        {

            logo = "https://www.computerhope.com/tips/images/igoogle-homepage.jpg";
        }
        else
        {
            logo = userTheme.HeaderImageLogoUrl; 
        }

        if(userTheme.IsBackgroundImage == false || userTheme.IsBackgroundImage == null)
        {

            backgroundBody = $"background:{userTheme.BackgroundColorHex};color:{userTheme.BackgroundFontColorHex}";
        }
        else
        {
            backgroundBody = $"background-image:url('{userTheme.BackgroundImageLogoUrl}');background-repeat: no-repeat;background-position: center;background-size: cover;"; 
        }
        await GetUserThemeSetting();
        var theme = GetThemeName(); 
        themeName = theme.Contains("bootstrap4") ? "bootstrap4" : theme; 
        filterstate.SetFilter(filter);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //if (firstRender)
        //{
        //    mobile = await jsRuntime.InvokeAsync<bool>("isDevice");
        //    isDevice = mobile ? "Mobile" : "Desktop";

        //    if (isDevice == "Mobile")
        //    {
        //        height = "60px";
        //    }
        //    else
        //    {
        //        height = "1px"; 
        //    }
        //}
        currentUrl = UriHelper.ToBaseRelativePath(UriHelper.BaseUri);
        filterstate.curUrl = null;
    }
    private const string AuthorityFormat = "https://login.microsoftonline.com/94e6b5f2-d1da-4de9-a4ca-88cfdb6c3de0/v2.0";
    private const string MSGraphScope = "https://analysis.windows.net/powerbi/api/.default";
    private async Task<AuthenticationResult> DoAuthentication()
    {
        try
        {
            IConfidentialClientApplication daemonClient;
            daemonClient = ConfidentialClientApplicationBuilder.Create(_configuration.GetSection("AzureAd:ClientId").Value)
                .WithAuthority(string.Format(AuthorityFormat, "common"))
                .WithClientSecret(_configuration.GetSection("AzureAd:ClientSecret").Value)
                .Build();

            AuthenticationResult authResult = await daemonClient.AcquireTokenForClient(new[] { MSGraphScope }).ExecuteAsync();
            return authResult;
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    private async Task ReportChangeHandler(ChangeEventArgs<Guid, Report> args)
    {
        _reportId = args.ItemData.Id;

        var generateTokenRequestParameters = new GenerateTokenRequest(accessLevel: "view");
        var tokenResponse = _client.Reports.GenerateTokenAsync(new Guid(_workspaceId.ToString()), new Guid(_reportId.ToString()), generateTokenRequestParameters).Result;

        _result.EmbedToken = tokenResponse;
        _result.EmbedUrl = args.ItemData.EmbedUrl;
        _result.Id = args.ItemData.Id.ToString();
        await Interop.CreateReport(JSRuntime, PowerBIElement, tokenResponse.Token, args.ItemData.EmbedUrl, args.ItemData.Id.ToString());
    }
    private async Task UserSettings()
    {

        ModalShow();
    }
    private async Task GoToReport(Report report,string editable = "false",string isdashboard="false")
    {
        currentUrl = editable;
        UriHelper.NavigateTo($"/reports/{_workspaceId.ToString()}/{report.Id}/{editable}/{isdashboard}");
    }

    private async Task ItemSelected(MenuEventArgs args)
    {
        string itemText =  args.Item.Text.ToUpper();
        if(itemText == "REPORT A BUG")
        {
            currentUrl = itemText;
            UriHelper.NavigateTo($"/reportbugs/");
        }

        if(itemText == "SUBMIT AN IDEA")
        {
            currentUrl = itemText;
            UriHelper.NavigateTo($"/submitidea/");
        }

        if(itemText == "LOOK AND FEEL")
        {
            currentUrl = itemText;
            await this.UserSettings();
        }

        if(itemText == "DATA SOURCES")
        {
            currentUrl = itemText;
            UriHelper.NavigateTo($"/datasources/");
        }

        if(itemText == "USERS")
        {
            currentUrl = itemText;
            UriHelper.NavigateTo($"/users/");
        }

        if(itemText == "GROUPS")
        {
            currentUrl = itemText;
            UriHelper.NavigateTo($"/groups/");
        }
        if (itemText == "DATASETS")
        {
            currentUrl = itemText;
            UriHelper.NavigateTo($"/datasets/");

        }
        if (itemText == "LOGS")
        {
            currentUrl = itemText;
            UriHelper.NavigateTo($"/logs/");

        }
        if(itemText == "LOGOUT")
        {

        }


    }
    private string GetThemeName() 
    { 
        var uri = UrlHelper.ToAbsoluteUri(UrlHelper.Uri); 
        QueryHelpers.ParseQuery(uri.Query).TryGetValue("theme", out var theme); 
        theme = theme.Count > 0 ? theme.First() : "bootstrap4"; 
        return theme; 
    } 
 
    /// <summary> 
    /// Returns the new Uri to navigate with theme changes. 
    /// </summary> 
    private string GetUri(string themeName) 
    { 
        var uri = UrlHelper.ToAbsoluteUri(UrlHelper.Uri); 
        return uri.AbsolutePath + "?theme=" + themeName; 
    } 
        private async Task GetUserThemeSetting()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        userName = user?.Identity?.Name ?? string.Empty;
        userTheme =  _userThemeSettingService.GetUserThemeSettings(userName) ?? new UserThemeSettingModel();
    }

    private async Task Submit()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        userTheme.UserName = userName;
        userTheme = await _userThemeSettingService.UpsertUserThemeAsync(userTheme);

       ModalOk();
        var timer = new Timer(new TimerCallback(_ => { uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true); }), null, 100, 100);
     
    }

   private async Task Reset()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        userTheme.UserName = userName;
        userName = user?.Identity?.Name ?? string.Empty;

        userTheme = await _userThemeSettingService.ResetUserThemes(userName);

      ModalOk();
        var timer = new Timer(new TimerCallback(_ => { uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true); }), null, 100, 100);
     
    }
   void ModalShow() => showModalUserSettings = true;
   void ModalCancel() => showModalUserSettings = false;
    void ModalOk()
    {
        Console.WriteLine("Modal ok");
        showModalUserSettings = false;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager UrlHelper { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager uriHelper { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUserThemeSettingService _userThemeSettingService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private BlazorDataAnalytics.Data.FilterState filterstate { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IReportDashboardService _reportDashboardService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUserSecurityService _userSecurityService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IConfiguration _configuration { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager UriHelper { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    }
}
#pragma warning restore 1591
