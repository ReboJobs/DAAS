// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorDataAnalytics.Dialogs
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using BlazorDataAnalytics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using BlazorDataAnalytics.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.Inputs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.Calendars;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.Spinner;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.SplitButtons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.Popups;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor.RichTextEditor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\_Imports.razor"
using BlazorDataAnalytics.Dialogs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Azure.Security.KeyVault.Secrets;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using BlazorDataAnalytics.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using BlazorDataAnalytics.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using BlazorDataAnalytics.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using BlazorDataAnalytics.Enums;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using BlazorDataAnalytics.Services.ReportDashboardService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using BlazorDataAnalytics.Services.UserVaultService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using BlazorDataAnalytics.Services.KeyVaultManager;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Blazorade.Msal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Microsoft.AnalysisServices.Tabular;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Microsoft.Data.SqlClient;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Microsoft.Identity.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Microsoft.PowerBI.Api;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Microsoft.PowerBI.Api.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Microsoft.Rest;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Persistence.Config.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Syncfusion.Blazor.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Microsoft.Azure.KeyVault;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Microsoft.Azure.KeyVault.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using SecretProperties = Azure.Security.KeyVault.Secrets.SecretProperties;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using BlazorDataAnalytics.Services.UserSecurityService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Syncfusion.Blazor.Diagram;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using BlazorDataAnalytics.Services.ServicePrincipalService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 37 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using Microsoft.AspNetCore.Html;

#line default
#line hidden
#nullable disable
#nullable restore
#line 38 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using System.ComponentModel.DataAnnotations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 39 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
using System.Web;

#line default
#line hidden
#nullable disable
    public partial class PowerBITemplateDialog : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 124 "C:\Users\Rebo\source\repos\DAaaS\BlazorDataAnalytics\Dialogs\PowerBITemplateDialog.razor"
       

    [CascadingParameter]
    private BlazoredModalInstance _modalInstance { get; set; }

    [CascadingParameter]
    public IModalService Modal { get; set; }

    [Parameter]
    public Guid _workspaceId { get; set; }
    [Parameter]
    public int? id { get; set; } = 0;
    [Parameter]
    public int _customerId { get; set; }
    [Parameter]
    public Reports _report { get; set; }
    [Parameter]
    public PowerBIClient _client{ get; set; }

    [Parameter]
    public bool refreshParent { get; set; } = false;

    [Parameter]
    public EventCallback<bool> RefreshPageEventCallBack { get; set; }

    public PowerBIEmbedConfig _result{ get; set; }
    private bool disableButton { get; set; } = false;
    private string Target { get; set; } = "body";
    MessageBoxDialog MessageDialog;
    public bool IsVisible { get; set; } = false;


    private bool showSpinner { get; set; }
    private ElementReference PowerBIElement;
    private IList<Group>? _group;
    private bool Visibility { get; set; } = false;
    private bool enableButton { get; set; } = true;
    private int _customerTenantId { get; set; }
    private UserVaultAppDetailModel UserVaultAppDetail = new UserVaultAppDetailModel();
    [Required]
    public string DropVal{ get; set; }
    [Required]
    public string selectedDataset{ get; set; }
    private Guid _reportId;   
    string buttonColor = string.Empty;
    string logo = string.Empty;
    string backgroundBody = string.Empty;
    private bool isRendered = false;
    private UserThemeSettingModel userTheme { get; set; } = new UserThemeSettingModel() ;
    public string CssClass { get; set; }
    public string Content = "Save....";
    public string reportName { get; set; }
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();
    private List<string> identifiersUI  = new List<string>();
    private Dictionary<string, ElementReference> carouselComponents = new Dictionary<string, ElementReference>();
    private List<ReportDetail> reportList = new List<ReportDetail>();
    public int SelectedIndex { get; set; }
    public EventCallback<int> SelectedIndexChanged { get; set; }
    public RenderFragment NextButtonTemplate { get; set; }
    private UserNameGroupRolesModel userNameGroupRolesModel = new UserNameGroupRolesModel();
    private string userNameIdentity { get; set; }
    private List<Dataset> datasetListCustomer = new List<Dataset>();
    private string _profileId = string.Empty;
    private bool IsRerender { get; set; } = false; 
    private bool IsEnableReportButton{ get; set; } = false; 

    public class ReportDetail 
    { 
        public string Id { get; set; } 
        public string Name{ get; set; } 
    }
    bool OnInputTriger = false;
    bool OnCreateReportTriger = false;


    protected override async Task OnInitializedAsync()
    {


    }
    public async Task OpenDialog(string workspaceId, int _id, int customerID, PowerBIClient client, Reports report,PowerBIEmbedConfig result)
    {
        this.IsVisible = true;
        this.refreshParent = false;
        this._report = report;
        this._client = client;
        this._workspaceId = new Guid(workspaceId);
        this.id = _id;
        this._customerId = customerID;
        this._result = result;

        foreach (var rep in _report.Value)
        {
            if(!identifiersUI.Contains(rep.Id.ToString()))
                identifiersUI.Add(rep.Id.ToString());
            if(!carouselComponents.ContainsKey(rep.Id.ToString()))
                carouselComponents.Add(rep.Id.ToString(), new ElementReference());
            ReportDetail repDet = new ReportDetail();
            repDet.Id = rep.Id.ToString();
            repDet.Name = rep.Name;
            if(reportList.Where(x=> x.Id== rep.Id.ToString()).FirstOrDefault()==null)
                reportList.Add(repDet);

        }
        //Retrieve workspace ID from customer
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        userNameIdentity = user?.Identity?.Name;
        userNameGroupRolesModel = await _userSecurityService.GetUserNameGroupRoles(userNameIdentity);

        if (userNameGroupRolesModel.WorkspaceId == Guid.Empty)
        {
            showSpinner = false;
            return;
        }
        IsEnableReportButton = true;
        _customerTenantId = userNameGroupRolesModel.CustomerTenantId;
        var customerTenant = await _userSecurityService.GetCustomerTenants(_customerTenantId);
        if (customerTenant.ProfileId > 0)
        {
            var profile = _iAppOwnsDataMultiTenantDbService.GetProfileById((int)customerTenant.ProfileId);
            _profileId = profile != null ? profile.ProfileId : null;
        }
        this.StateHasChanged();
    }

    async Task OnChangeCarrosel(int x)
    {
        try
        {
            this.DropVal = this.reportList[x].Id;
        }
        catch (Exception ex) { }
    }

    private void OnBtnClick()
    {
        if (_report.Value.Count() > 0)
        {
            this.Target = "#dialog.e-dialog";
            this.OnCreateReportTriger = true;
            this.Visibility = !this.Visibility;
            IsRerender = true;
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (OnCreateReportTriger)
        {
            OnCreateReportTriger = false;
            return;
        }
        showSpinner = true;
        if (!IsRerender)
        {
           await RenderReport(firstRender);
        }
        if (firstRender)
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            var   claims = user.Claims;
            var   userEmail = claims?.FirstOrDefault(x => x.Type.Equals("preferred_username", StringComparison.OrdinalIgnoreCase))?.Value;              
            this.DropVal = this.reportList.Count > 0 ? this.reportList[0].Id: null;
            if (id > 0)
            {
                UserVaultAppDetail = await _userVaultService.GetUserVaultAppDetails(id);

            }
        }


        showSpinner = false;

    }
    public void Begin(Syncfusion.Blazor.SplitButtons.ProgressEventArgs args)
    {
        Content = "Saving...";
        CssClass = "e-hide-spinner e-info border-radius";
    }

    public async Task End(Syncfusion.Blazor.SplitButtons.ProgressEventArgs args)
    {
        await   GenerateReport();
        Content = "Saved....";
        CssClass = "e-hide-spinner e-success border-radius";
        await Task.Delay(1000);
        Content = "Save....";
        CssClass = "e-hide-spinner border-radius";

    }
    private void ValueChangeHandler(ChangeEventArgs<string, Dataset> args)
    {
        // Here, you can customize your code.
        IsRerender = true;
    }
    private async void ValueChangeHandler(ChangeEventArgs<string, ReportDetail> args)
    {
        disableButton = args.Value != string.Empty;
        selectedDataset = null;
        if (args.Value != null)
        {
            AuthenticationResult authenticationResult = null;
            authenticationResult = await DoAuthentication();
            DatasetManager dsmanager ;
            dsmanager = new DatasetManager(true, userNameGroupRolesModel.WorkspaceUrl,authenticationResult);
            string reportData = reportList.Where(x => x.Id == DropVal).FirstOrDefault().Id;
            var datasetfromTemplate = _client.Reports.GetReport(new Guid(_configuration.GetSection("PowerBiTemplate:WorkspaceId").Value),new Guid(reportData));
            var datasetTemplate = _client.Datasets.GetDataset(new Guid(_configuration.GetSection("PowerBiTemplate:WorkspaceId").Value),datasetfromTemplate.DatasetId);
            var dataSetList = _client.Datasets.GetDatasets(_workspaceId);

            var templateTables = dsmanager.GetAllTablesFromTemplateWorkspace(datasetTemplate.Name);

            int counter = templateTables.Tables.Where(x=> !x.Name.ToLower().Contains("datetabletemplate") && !x.Name.ToLower().Contains("localdatetable")) != null ? templateTables.Tables.Where(x=> !x.Name.ToLower().Contains("datetabletemplate") && !x.Name.ToLower().Contains("localdatetable")) .Count() : 0;
            foreach (var item in dataSetList.Value)
            {
                var tablesFromCustomer = dsmanager.GetAllTablesFromCustomerWorkspace(item.Name);
                if(tablesFromCustomer!=null)
                    foreach (var ds in templateTables.Tables.Where(x=> !x.Name.ToLower().Contains("datetabletemplate") && !x.Name.ToLower().Contains("localdatetable")))
                    {
                        if(tablesFromCustomer.Tables.Where(x=> x.Name.ToLower().Trim() == ds.Name.Trim() &&
                                                   (!x.Name.ToLower().Contains("datetabletemplate") && !x.Name.ToLower().Contains("localdatetable"))) !=null 
                                                   && tablesFromCustomer.Tables.Where(x=> x.Name.Trim() == ds.Name.Trim() 
                                                   && (!x.Name.ToLower().Contains("datetabletemplate") 
                                                   && !x.Name.ToLower().Contains("localdatetable"))).Count() > 0 )
                        {
                            counter--;
                            if (counter == 0)
                            {
                                var dsCustomer = _client.Datasets.GetDataset( _workspaceId, tablesFromCustomer.Database.ID); 
                                datasetListCustomer.Add(dsCustomer);
                            }
                        }

                    }



            } 

        }
    }

    private const string AuthorityFormat = "https://login.microsoftonline.com/94e6b5f2-d1da-4de9-a4ca-88cfdb6c3de0/v2.0";
    private const string MSGraphScope = "https://analysis.windows.net/powerbi/api/.default";
    private async Task<Microsoft.Identity.Client.AuthenticationResult> DoAuthentication()
    {
        IConfidentialClientApplication daemonClient;
        daemonClient = ConfidentialClientApplicationBuilder.Create(_configuration.GetSection("AzureAd:ClientId").Value)
            .WithAuthority(string.Format(AuthorityFormat, _configuration.GetSection("AzureAd:TenantId").Value))
            .WithClientSecret(_configuration.GetSection("AzureAd:ClientSecret").Value)
            .Build();

        AuthenticationResult authResult = await daemonClient.AcquireTokenForClient(new[] { MSGraphScope }).ExecuteAsync();
        return authResult;
    }

    private async Task RenderReport(bool firstRender)
    {
        if(_report !=null && _report.Value !=null)
        foreach (var report in _report.Value)
        {
            //  var clientReport = _client.Reports.GetReport(_workspaceId, Guid.Parse(_report.Value.First().Id.ToString()));
            var generateTokenRequestParameters = new GenerateTokenRequest(accessLevel: "View");
            var tokenResponse = _client.Reports.GenerateTokenAsync(new Guid( _configuration.GetSection("PowerBiTemplate:WorkspaceId").Value), new Guid(report.Id.ToString()), generateTokenRequestParameters).Result;

            _result.EmbedToken = tokenResponse;
            _result.EmbedUrl = report.EmbedUrl;
            _result.Id = report.Id.ToString();
            JSRuntime.InvokeAsync<object>(
                    "ShowMyPowerBI.showReport",
                    carouselComponents[report.Id.ToString()],
                    tokenResponse.Token,
                    report.EmbedUrl,
                     report.Id.ToString(),
                    "true",
                    "false"
                    );
        }
        if (firstRender) { InvokeAsync(() => StateHasChanged()); };
    }
    private void Cancel()
    {
        _modalInstance.CancelAsync();
    }

    private async Task Close()
    {
        await _modalInstance.CloseAsync();
    }

    public async Task GenerateReport()
    {
        if (string.IsNullOrEmpty(DropVal)) return;
        try
        {
            var reportItem = _report.Value.Where(x => x.Id == new Guid(DropVal)).FirstOrDefault();

            CloneReportRequest cloneReportRequest = new CloneReportRequest();
            cloneReportRequest.Name = reportName;
            cloneReportRequest.TargetWorkspaceId = _workspaceId;

            var cloned = _client.Reports.CloneReportInGroup(new Guid(_configuration.GetSection("PowerBiTemplate:WorkspaceId").Value), reportItem.Id, cloneReportRequest);
            var datasets = _client.Datasets.GetDataset(new Guid(_configuration.GetSection("PowerBiTemplate:WorkspaceId").Value), reportItem.DatasetId);
            AuthenticationResult authenticationResult = null;
            authenticationResult = await DoAuthentication();
            DatasetManager manager = new DatasetManager(true, userNameGroupRolesModel.WorkspaceUrl, authenticationResult);
            var newDataset = new Microsoft.AnalysisServices.Tabular.Database();
            if (selectedDataset == null)
            {
                newDataset = await DatasetManager.CopyDatabaseToOtherWorkspace(datasets.Name, reportName);
                //  _client.Datasets.TakeOver(_workspaceId, newDataset.ID.ToString());
                SqlConnectionStringBuilder connectionStringBuilder =new SqlConnectionStringBuilder(_configuration.GetConnectionString("XeroConnection"));
                if(id > 0 && !string.IsNullOrEmpty(UserVaultAppDetail.DatabaseName) && !string.IsNullOrEmpty(UserVaultAppDetail.ServerName) && !string.IsNullOrEmpty(UserVaultAppDetail.UserPassword) && !string.IsNullOrEmpty(UserVaultAppDetail.UserName))
                    manager.PatchSqlDatasourceCredentials(_workspaceId, newDataset.ID,UserVaultAppDetail.ServerName,UserVaultAppDetail.DatabaseName, UserVaultAppDetail.UserName,UserVaultAppDetail.UserPassword,_profileId);
                else
                    manager.PatchSqlDatasourceCredentials(_workspaceId, newDataset.ID, AppSettings.sqlUserName, AppSettings.sqlUserPassword,_profileId, connectionStringBuilder.DataSource.ToString());
            }
            else
            {
                newDataset.ID = selectedDataset;

            }

            RebindReportRequest rebindReq = new RebindReportRequest();
            rebindReq.DatasetId = newDataset.ID;
            _client.Datasets.RefreshDataset(_workspaceId, newDataset.ID);
            _client.Reports.RebindReport(_workspaceId, cloned.Id, rebindReq);
            _client.Datasets.TakeOver(_workspaceId, newDataset.ID);

            var customerUserRole = new CustomerUserRole
            {
                CustomerTernantId = _customerTenantId,
                Description = $"View {reportName} Report",
                UserRoleName =reportName,
                IsActive = true,
            };

            string reportRoleCode = await _userSecurityService.InsertCustomerUserRoleByName(customerUserRole);

            string newTitle = await _reportDashboardService.UpsertReportInDashboard(reportName,cloned.Id, reportRoleCode);


            this.Visibility= !this.Visibility;
            reportName = null;
            selectedDataset = null;


            MessageDialog.OpenDialog(AlertStatus.Success,string.Format("Report for '{0}' successfully created.", cloned.Name));

        } catch (Exception ex) {

            MessageDialog.OpenDialog(AlertStatus.Danger, ex.Message);
        }
        //}
        //catch (Exception ex) { }

    }
    private void showAlertMessage(string alertType, string message, string title)
    {

         MessageDialog.OpenDialog(alertType, message);

    }
    public void CloseDialog()
    {
        this.IsVisible = false;
        this.StateHasChanged();
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAppOwnsDataMultiTenantDbService _iAppOwnsDataMultiTenantDbService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IReportDashboardService _reportDashboardService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IKeyVaultManager _keyVaultManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUserVaultService _userVaultService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUserSecurityService _userSecurityService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IConfiguration _configuration { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private BlazoradeMsalService msalService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager UriHelper { get; set; }
    }
}
#pragma warning restore 1591
